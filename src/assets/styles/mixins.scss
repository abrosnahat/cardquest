@import './media';

@mixin fillSvg($color) {
  svg,
  rect,
  path {
    fill: $color;
  }
}

@mixin desktop($breakPoint: m, $display: flex) {
  display: none;

  @include mq($breakPoint) {
    display: $display;
  }
}

@mixin mobile($breakPoint: m) {
  display: flex;

  @include mq($breakPoint) {
    display: none;
  }
}

@mixin resetInput {
  width: inherit;
  color: inherit;
  font-weight: inherit;
  background: transparent;

  &::placeholder {
    color: rgba(#adb3c6, 0.8);
  }

  &:-webkit-autofill,
  &:-webkit-autofill:focus {
    transition: background-color 600000s 0s, color 600000s 0s;
  }
}

@mixin fullFeaturedLink() {
  color: #1862dc;
  text-decoration-line: underline;

  &:visited {
    color: #551a8b;
  }
}

@mixin mq($breakpoint) {
  @each $key, $val in $media {
    @if $breakpoint==$key {
      @media screen and (min-width: $val) {
        @content;
      }
    }
  }
}

@mixin itemPseudoDivider() {
  content: '';
  position: absolute;
  top: -1px;
  left: 50%;
  width: calc(100% - 24px);
  height: 1px;
  background: #e9ecf4;
  pointer-events: none;
  transform: translateX(-50%);
}

@mixin textEllipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin layoutMaxWidth() {
  width: 100%;
  max-width: map-get($map: $media, $key: 2xl);
  margin: 0 auto;
}
